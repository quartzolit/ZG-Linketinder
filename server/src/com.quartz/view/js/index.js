/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	"use strict";
/******/ 	var __webpack_modules__ = ({

/***/ "./client/js/script.ts":
/*!*****************************!*\
  !*** ./client/js/script.ts ***!
  \*****************************/
/***/ (() => {

eval("\r\n//--creating global variables--\r\nconst people = [];\r\nif (sessionStorage.people) {\r\n    people.push(JSON.parse(sessionStorage.people)[0]);\r\n}\r\nlet loggedPerson;\r\n//--Creating our DOM variables--\r\n//Tag Company - Candidate\r\nconst candidatePart = document.querySelector(\".candidate-section\");\r\n;\r\nconst companyPart = document.querySelector(\".company-section\");\r\n//Setting Required\r\nconst candidateElements = document.querySelectorAll(\".candidate\");\r\nconst companyElements = document.querySelectorAll(\".company\");\r\nconst signupButton = document.querySelector(\".signup\");\r\nconst radioTags = document.querySelector(\".signup-select-radio\");\r\nconst radioCandidate = document.querySelector(\".select-candidate\");\r\nconst radioCompany = document.querySelector(\".select-company\");\r\n//Signup Form\r\nconst signupEmail = document.querySelector('[data-type=\"login\"]');\r\nconst signupPassword = document.querySelector('[data-type=\"password\"]');\r\nconst signupConfirmPassword = document.querySelector('[data-type=\"confirm-password\"]');\r\nconst message = document.querySelector(\"#matching-message\");\r\nconst signupName = document.querySelector('[data-type=\"name\"]');\r\nconst signupAge = document.querySelector('[data-type=\"age\"]');\r\nconst signupCpf = document.querySelector('[data-type=\"cpf\"]');\r\nconst signupCompanyName = document.querySelector('[data-type=\"company-name\"]');\r\nconst signupCnpj = document.querySelector('[data-type=\"cnpj\"]');\r\nconst signupCountry = document.querySelector('[data-type=\"country\"]');\r\nconst signupCep = document.querySelector('[data-type=\"cep\"]');\r\nconst signupState = document.querySelector('[data-type=\"state\"]');\r\nconst signupDescription = document.querySelector('textarea');\r\n//login\r\nconst loginEmail = document.querySelector('[data-type=\"email-login\"]');\r\nconst loginPassword = document.querySelector('[data-type=\"password-login\"]');\r\nconst loginButton = document.querySelector('.login-button');\r\n//--creating event Listeners--\r\nsignupConfirmPassword === null || signupConfirmPassword === void 0 ? void 0 : signupConfirmPassword.addEventListener('keyup', validatePassword);\r\nsignupButton.addEventListener('click', createAccount);\r\nradioTags.addEventListener('click', changeSignupTags);\r\nloginButton.addEventListener('click', tryToLogin);\r\n//Functions\r\nfunction changeSignupTags(e) {\r\n    if (e.target.classList.contains('select-company')) {\r\n        candidatePart.style.display = 'none';\r\n        companyPart.style.display = 'inline-block';\r\n        companyElements.forEach(e => {\r\n            e.setAttribute(\"required\", \"required\");\r\n        });\r\n        candidateElements.forEach(e => {\r\n            e.removeAttribute(\"required\");\r\n        });\r\n    }\r\n    else if (e.target.classList.contains('select-candidate')) {\r\n        e.target.setAttribute('checked', 'checked');\r\n        companyPart.style.display = 'none';\r\n        candidatePart.style.display = 'inline-block';\r\n        candidateElements.forEach(e => {\r\n            e.setAttribute(\"required\", \"required\");\r\n        });\r\n        companyElements.forEach(e => {\r\n            e.removeAttribute(\"required\");\r\n        });\r\n    }\r\n}\r\nfunction createAccount(e) {\r\n    let check = true;\r\n    e.preventDefault();\r\n    if (radioCandidate.checked) {\r\n        let person = {\r\n            type: \"candidate\",\r\n            login: \"\",\r\n            password: \"\",\r\n            name: \"\",\r\n            age: 0,\r\n            cpf: \"\",\r\n            cep: \"\",\r\n            state: \"\",\r\n            description: \"\"\r\n        };\r\n        if (signupPassword.value == signupConfirmPassword.value) {\r\n            person.password = signupPassword.value;\r\n        }\r\n        else {\r\n            window.alert(\"Password does not match Confirm Passowrd\");\r\n            return;\r\n        }\r\n        person.login = signupEmail.value;\r\n        person.name = signupName.value;\r\n        person.age = parseInt(signupAge.value);\r\n        person.cpf = signupCpf.value;\r\n        person.cep = signupCep.value;\r\n        person.state = signupState.value;\r\n        person.description = signupDescription.value;\r\n        for (let p of people) {\r\n            if (person.login == p.login) {\r\n                check = false;\r\n                window.alert(\"E-mail was used on another account\");\r\n            }\r\n        }\r\n        if (check) {\r\n            people.push(person);\r\n        }\r\n    }\r\n    else {\r\n        let person = {\r\n            type: \"company\",\r\n            login: \"\",\r\n            password: \"\",\r\n            companyName: \"\",\r\n            cnpj: \"\",\r\n            country: \"\",\r\n            cep: \"\",\r\n            state: \"\",\r\n            description: \"\"\r\n        };\r\n        if (signupPassword.value == signupConfirmPassword.value) {\r\n            person.password = signupPassword.value;\r\n        }\r\n        else {\r\n            window.alert(\"Password does not match Confirm Passowrd\");\r\n            return;\r\n        }\r\n        person.login = signupEmail.value;\r\n        person.companyName = signupCompanyName.value;\r\n        person.cnpj = signupCnpj.value;\r\n        person.country = signupCountry.value;\r\n        person.cep = signupCep.value;\r\n        person.state = signupState.value;\r\n        person.description = signupDescription.value;\r\n        for (let p of people) {\r\n            if (p.login == person.login) {\r\n                check = false;\r\n                window.alert(\"E-mail was used on another account\");\r\n            }\r\n        }\r\n        if (check) {\r\n            people.push(person);\r\n        }\r\n    }\r\n    if (check) {\r\n        window.alert(`New Account created. Total Account: ${people.length}`);\r\n    }\r\n}\r\nfunction validatePassword() {\r\n    signupConfirmPassword.value = this.value;\r\n    if (signupConfirmPassword.value.length > 3) {\r\n        if (signupPassword.value == this.value) {\r\n            message.textContent = \"Password Match\";\r\n            message.style.color = \"green\";\r\n        }\r\n        else {\r\n            message.textContent = \"Password Does Not Match\";\r\n            message.style.color = \"red\";\r\n        }\r\n    }\r\n}\r\nfunction tryToLogin() {\r\n    let check = false;\r\n    for (const person of people) {\r\n        if (person.login === loginEmail.value && person.password === loginPassword.value) {\r\n            sessionStorage.setItem(\"loggedPerson\", JSON.stringify(person));\r\n            sessionStorage.setItem(\"people\", JSON.stringify(people));\r\n            check = true;\r\n        }\r\n    }\r\n    if (check) {\r\n        location.assign(\"http://localhost:9000/view-page.html\");\r\n    }\r\n    else if (loginEmail.value.length === 0 || loginPassword.value.length === 0) {\r\n        window.alert(\"Please Insert a Login and a Password\");\r\n        return;\r\n    }\r\n    else {\r\n        window.alert(\"Login or password are incorrect\");\r\n        return;\r\n    }\r\n}\r\n\n\n//# sourceURL=webpack://ZG-Linketinder/./client/js/script.ts?");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval devtool is used.
/******/ 	var __webpack_exports__ = {};
/******/ 	__webpack_modules__["./client/js/script.ts"]();
/******/ 	
/******/ })()
;